@using SweetSerenityBySarah
@inherits UmbracoTemplatePage
@section headerCss{
}

@{
    Layout = "Master.cshtml";

    var siteSetting = Umbraco.TypedContentAtRoot().FirstOrDefault(x => x.ContentType.Alias == "GlobalSettings");
    var publishAPIKey = PaymentService.GetPublishApiKey(siteSetting);

    var pageHeading = Model.Content.Name;
    if (Model.Content.HasProperty("pageHeading") && Model.Content.HasValue("pageHeading"))
        {
        pageHeading = Model.Content.GetPropertyValue("pageHeading").ToString();
        }
        <div class="container">
            <div class="row">
                <div class="box">
                    <div class="col-lg-12 text-center">
                        <h1 class="brand-name">
                            @pageHeading
                        </h1>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="box">
                    <div class="col-lg-9">
                        <div class="row">
                            @Html.Partial("Master/HeadingImage")

                            @if (Model.Content.HasProperty("bodyText") && Model.Content.HasValue("bodyText"))
                                {
                                <div class="col-lg-12">
                                    @Html.Raw(Model.Content.GetPropertyValue("bodyText"))
                                </div>
                                }

                            <div class="col-lg-12">
                                @Html.Action("PaymentForm", "PaymentSurface")
                            </div>

                            <div class="col-lg-12">
                                @Html.Action("PaymentsList", "PaymentSurface")
                            </div>

                        </div>
                    </div>

                    @Html.Partial("Master/SideNavigation")
                </div>
            </div>

        </div>
}

@section footerScripts{

    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            Stripe.setPublishableKey("@publishAPIKey");

            $('.cc-number').payment('formatCardNumber');
            $('.cc-exp').payment('formatCardExpiry');
            $('.cc-cvc').payment('formatCardCVC');

            var paymentBtn = $("#stripePaymentBtn");
            if (paymentBtn !== "undefinded") {
                if (paymentBtn.is(':visible')) {
                    paymentBtn.prop('disabled', true);
                }
            }

            var memberId = $("#MemberId");
            var submitEmail = $("#MemberEmailAddress");
            if (memberId !== "undefined") {
                memberId.on("change", function () {
                    if ($(this).val() !== jQuery.data(this, "lastvalue")) {
                        var setEmail = $("select#MemberId option:selected").text();
                        var setMemberId = $("select#MemberId option:selected").val();
                        
                        submitEmail.val('');
                        submitEmail.val(setEmail);
                    }
                });
            }


            var paymentAmount = $("#PaymentAmount");
            if (paymentAmount !== "undefined") {
                paymentAmount.on("change", function () {
                    if ($(this).val() !== jQuery.data(this, "lastvalue")) {
                        var setAmount = $(this).val();
                        if (setAmount > 5) {
                            paymentBtn.prop('disabled', false);
                        } else {
                            paymentBtn.prop('disabled', true);
                        }
                    }
                });
            }

            $('#paymentCardIcon').hide();
            $('#cardNumber').on('keyup', function () {
                var ccNum = $(this).val();
                if (!ccNum || ccNum.length < 3) {
                    $('#paymentCardIcon').hide();
                }
                else {
                    try {
                        var cardType = Stripe.card.cardType(ccNum);
                        if (cardType) {
                            cardType = cardType.toLowerCase().replace(/\s/gi, '-');
                            if (cardType == 'american-express')
                                cardType = 'amex';

                            $('#cardIcon').attr('class', 'fa fa-cc-' + cardType.toLowerCase());
                            $('#paymentCardIcon').show();
                        }
                    } catch (e) {
                        $('#paymentCardIcon').hide();
                    }
                }
            });

            var $form = $('#cardDetailsForm');
            $form.submit(function (event) {
                $(window).spin();
                var expireDate = $('#CardExpiryDate').val();
                var expireMonth = "";
                var expireYear = "";
                if (expireDate !== null) {
                    var arr = expireDate.split('/');
                    expireMonth = arr[0];
                    expireYear = arr[1];
                }

                $form.find('#exp_month').val(parseInt(expireMonth));
                $form.find('#exp_year').val(parseInt(expireYear));
                // Disable the submit button to prevent repeated clicks:
                $form.find('.submit').prop('disabled', true);

                // Request a token from Stripe:
                Stripe.card.createToken($form, stripeResponseHandler);

                // Prevent the form from being submitted:
                return false;
            });

        });

        function stripeResponseHandler(status, response) {
            // Grab the form:
            var $form = $('#cardDetailsForm');
            debugger;
            if (response.error) { // Problem!
                $(window).spin();
                // Show the errors on the form:
                $form.find("#stripeErrors").show();
                $form.find('.payment-errors').text(response.error.message);
                $form.find('.submit').prop('disabled', false); // Re-enable submission

            } else { // Token was created!

                // Get the token ID:
                var token = response.id;

                // Insert the token ID into the form so it gets submitted to the server:
                $form.append($('<input type="hidden" name="stripeToken">').val(token));

                // Submit the form:
                $form.get(0).submit();
            }
        };
    </script>


    @*<script type="text/javascript">
            $(document).ready(function () {

                var paymentBtn = $("#stripePaymentBtn").find(".stripe-button-el");

                setTimeout(function () {

                    if (paymentBtn !== "undefinded") {
                        if (paymentBtn.is(':visible')) {
                            paymentBtn.prop('disabled', true);
                        }
                    }

                    var stripeScript = $("#stripePaymentBtn").find(".stripe-button");

                    var paymentEmail = $("#MemberId");
                    var submitEmail = $("#MemberEmailAddress");
                    if (paymentEmail !== "undefined") {
                        paymentEmail.on("change", function () {
                            if ($(this).val() !== jQuery.data(this, "lastvalue")) {
                                var setEmail = $("select#MemberId option:selected").text();
                                if (stripeScript !== "undefined") {
                                    stripeScript.attr("data-email", setEmail);
                                }
                                submitEmail.val('');
                                submitEmail.val(setEmail);
                            }
                        });
                    }

                    var paymentAmount = $("#PaymentAmount");
                    if (paymentAmount !== "undefined") {
                        paymentAmount.on("change", function () {
                            if ($(this).val() !== jQuery.data(this, "lastvalue")) {
                                var setAmount = $(this).val();
                                if (setAmount > 5) {
                                    if (stripeScript !== "undefined") {
                                        stripeScript.attr("data-amount", setAmount);
                                    }
                                    paymentBtn.prop('disabled', false);
                                }
                            }
                        });
                    }

                }, 1000);

                });
        </script>*@

    @*<script>
            $("#validationError").hide();
            $("#submitError").hide();
            //$('#processPayment').prop('disabled', false);

            $('.cc-number').payment('formatCardNumber');
            $('.cc-exp').payment('formatCardExpiry');
            $('.cc-cvc').payment('formatCardCVC');

            $('#processPayment').click(function () {
                $('#cardDetailsForm').trigger('submit');
            });

            $('#cardDetailsForm').submit(function (event) {

                var $form = $(this);
                //$form.find('#processPayment').prop('disabled', true);

                $("#cardDetailsForm").validate({
                    CardholdersName: {
                        required: true
                    },

                    CardNumber: {
                        required: true
                    },

                    CardExpiryDate: {
                        required: true
                    },

                    CardCcv: {
                        required: true
                    },
                    errorPlacement: function (error, element) {
                    },
                    invalidHandler: function (event, validator) {
                        var errors = validator.numberOfInvalids();
                        if (errors) {
                            var message = "<h4>Form error!</h4><p>We're sorry, there was a problem submitting your form. Please check the fields highlighted below to resolve any errors.</p>";
                            $("#validationError").html(message);
                            $("#validationError").show();
                            //$form.find('#processPayment').prop('disabled', false);
                        }
                        else {
                            $("#validationError").hide();
                            //$form.find('#processPayment').prop('disabled', true);
                        }
                    },
                    submitHandler: function () {
                        $(window).spin();
                        Stripe.setPublishableKey(@publishAPIKey);
                        var expireDate = $('#CardExpiryDate').val();
                        var expireMonth = "";
                        var expireYear = "";
                        if (expireDate !== null) {
                            var arr = expireDate.split('/');
                            expireMonth = arr[0];
                            expireYear = arr[1];
                        }

                        Stripe.card.createToken({
                            number: $('#CardNumber').val(),
                            cvc: $('#CardCcv').val(),
                            exp_month: parseInt(expireMonth),
                            exp_year: parseInt(expireYear)
                        }, stripeResponseHandler);
                    }
                });
                return false;
            });

            function stripeResponseHandler(status, response) {

                // Grab the form:
                var $form = $('#cardDetailsForm');

                if (response.error) {

                    // Show the errors on the form
                    var message = "<h4>Form error!</h4><p>" + response.error.message + "</p>";
                    $("#validationError").html(message);
                    $("#validationError").show();
                    $form.find('#processPayment').prop('disabled', false);
                    $(window).spin();

                } else {

                    // Get the token ID:
                    var token = response.id;

                    // Insert the token into the form so it gets submitted to the server:
                    $form.append($('<input type="hidden" name="StripeToken" />').val(token));

                    // Submit the form:
                    $form.get(0).submit();
                    $(window).spin();
                }
            }
        </script>*@
}
